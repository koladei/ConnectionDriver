<?php

module_load_include('module', 'settings_provider');
$module_path = drupal_get_path('module', 'ldap_connection_driver');
include_once str_replace('/', DIRECTORY_SEPARATOR, $module_path . '/forms/admin.inc');
include_once str_replace('/', DIRECTORY_SEPARATOR, $module_path . '/LDAPConnectionDriver.php');

use com\mainone\middleware\LDAPConnectionDriver;

function ldap_connection_driver_connection_driver_ldap_alter(&$container) {
    $host = variable_get('LDAP_CONNECTION_DRIVER_HOST');
    $protocol = variable_get('LDAP_CONNECTION_DRIVER_PROTOCOL');
    $port = variable_get('LDAP_CONNECTION_DRIVER_PORT');
    $username = variable_get('LDAP_CONNECTION_DRIVER_USERNAME');
    $password = variable_get('LDAP_CONNECTION_DRIVER_PASSWORD');
    $dn = variable_get('LDAP_CONNECTION_DRIVER_DN');

    $driver = new LDAPConnectionDriver(function($x){
        return mware_connection_driver__get_driver($x);
    }, $host, $protocol, $port, $username, $password, $dn);

    $defs = ldap_connection_driver__get_entity_definitions();
    $driver->setEntities($defs);
    
    $container['ldap'] = $driver;
}

/**
 * Implement hook_menu().
 */
function ldap_connection_driver_menu() {
    $items = [];

    return $items;
}

/**
 * Implements hook_permission
 * @return array
 */
function ldap_connection_driver_permission() {
    $permission = [];
    return $permission;
}

function ldap_connection_driver__user_access($args) {
    return true;
}

/**
 * Implements hook_library
 * @return array
 */
function ldap_connection_driver_library() {
    $libraries = array();

    return $libraries;
}

/**
 * Returns the connection settings with which to connect to salesforce.
 * @return \stdClass
 */
function ldap_connection_driver__get_settings($settings = 'default') {
    $s = new stdClass();
    $sT = $settings == 'default' ? variable_get('SALESFORCE_SETTINGS_USE_PRODUCTION', FALSE) : ($settings == 'production' ? TRUE : FALSE);

    if ($sT == FALSE) {
        $s->URL = variable_get('SALESFORCE_SANDBOX_SETTINGS_ENDPOINT_URL');
        $s->Username = variable_get('SALESFORCE_SANDBOX_SETTINGS_USERNAME');
        $s->Password = variable_get('SALESFORCE_SANDBOX_SETTINGS_PASSWORD');
        $s->GrantType = variable_get('SALESFORCE_SANDBOX_SETTINGS_GRANT_TYPE');
        $s->ClientID = variable_get('SALESFORCE_SANDBOX_SETTINGS_CLIENT_ID');
        $s->ClientSecret = variable_get('SALESFORCE_SANDBOX_SETTINGS_CLIENT_SECRET');
    } else {
        $s->URL = variable_get('SALESFORCE_SETTINGS_ENDPOINT_URL');
        $s->Username = variable_get('SALESFORCE_SETTINGS_USERNAME');
        $s->Password = variable_get('SALESFORCE_SETTINGS_PASSWORD');
        $s->GrantType = variable_get('SALESFORCE_SETTINGS_GRANT_TYPE');
        $s->ClientID = variable_get('SALESFORCE_SETTINGS_CLIENT_ID');
        $s->ClientSecret = variable_get('SALESFORCE_SETTINGS_CLIENT_SECRET');
    }
    return $s;
}


function  ldap_connection_driver__get_entity_definition($entity_name, $component = NULL){
    $entities = ldap_connection_driver__get_entity_definitions();
    if ($component) {
        return isset($entities[$entity_name]) && isset($entities[$entity_name][$component]) ? $entities[$entity_name][$component] : NULL;
    } else {
        return isset($entities[$entity_name]) ? $entities[$entity_name] : NULL;
    }
}


/**
 * Returns the full definition of an entity or the definition of the specified component.
 * Components include: fields, internal_name
 * @param string $entity_name
 * @param string $component
 * @return array
 */
function ldap_connection_driver__get_entity_definitions() {
   return [
        'objects' => [
            'internal_name' => 'objects',
            'fields' => [
                'samaccountname' => [
                    'preferred_name' => 'Id',
                    'type' => 'string',
                    'mandatory' => 1,
                ]
                , 'mail' => [
                    'preferred_name' => 'EMail',
                    'type' => 'string',
                    'mandatory' => 1,
                ]
                , 'mobile' => [
                    'preferred_name' => 'Mobile',
                    'type' => 'string',
                    'mandatory' => 1
                    , 'is_array' =>  1
                ]
                , 'displayname' => [
                    'preferred_name' => 'DisplayName',
                    'type' => 'string',
                    'mandatory' => 1
                ]
                , 'objectclass' => [
                    'preferred_name' => 'ObjectClass',
                    'type' => 'string'
                    , 'mandatory' => 1
                    , 'is_array' =>  1
                ]
                , 'memberof' => [
                    'preferred_name' => 'MemberOf',
                    'type' => 'string'
                    , 'mandatory' => 1
                    , 'is_array' =>  1
                ]
                , 'manager' => [
                    'preferred_name' => 'Manager',
                    'type' => 'string'
                    , 'mandatory' => 1
                    , 'relationship' => [
                        'local_field' => 'Manager'
                        ,'remote_field' => 'DN'
                        ,'remote_type'=> 'parent'
                        ,'remote_entity'=> 'objects'
                    ],
                ]
                , '_members' => [
                    'preferred_name' => 'Members',
                    'type' => 'detail'
                    , 'relationship' => [
                        'local_field' => 'DN'
                        ,'remote_field' => 'MemberOf'
                        ,'remote_type'=> 'child'
                        ,'remote_entity'=> 'objects'
                    ],
                ]
                , '_subordinates' => [
                    'preferred_name' => 'Subordinates',
                    'type' => 'detail'
                    , 'relationship' => [
                        'local_field' => 'DN'
                        ,'remote_field' => 'ManagerId'
                        ,'remote_type'=> 'child'
                        ,'remote_entity'=> 'objects'
                    ],
                ]
                , 'thumbnailphoto' => [
                    'preferred_name' => 'Photo',
                    'type' => 'blob'
                    , 'mandatory' => 1
                ]
                , 'distinguishedname' => [
                    'preferred_name' => 'DN'
                    ,'type' => 'string'
                    , 'mandatory' => 1
                ]
                , 'msexchuseraccountcontrol' => [
                    'preferred_name' => 'UserAccountControl'
                    ,'type' => 'int'
                    , 'mandatory' => 1
                ]
                , 'msexchmasteraccountsid' => [
                    'preferred_name' => 'AccountSID'
                    ,'type' => 'string'
                    , 'mandatory' => 1
                ]
            ]
        ],
    ];
}